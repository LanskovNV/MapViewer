import { triangulate } from '../../containers/Triangulation/triangulation';
import isCorrect from '../isCorrect';

test('triangulate 2', () => {
  const geometry = [
    [0, 50],
    [50, 100],
    [100, 50],
    [150, 100],
    [200, 50],
    [150, 0],
    [50, 0]
  ];
  const correctResults = [
    [
      [[0, 50], [50, 100], [100, 50]],
      [[0, 50], [50, 0], [100, 50]],
      [[100, 50], [150, 0], [50, 0]],
      [[100, 50], [150, 100], [200, 50]],
      [[100, 50], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [50, 0]],
      [[50, 100], [50, 0], [100, 50]],
      [[100, 50], [150, 0], [50, 0]],
      [[100, 50], [150, 100], [150, 0]],
      [[150, 100], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [100, 50]],
      [[0, 50], [50, 0], [100, 50]],
      [[100, 50], [150, 0], [50, 0]],
      [[100, 50], [150, 100], [150, 0]],
      [[150, 100], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [50, 0]],
      [[50, 100], [50, 0], [100, 50]],
      [[100, 50], [150, 0], [50, 0]],
      [[100, 50], [150, 100], [200, 50]],
      [[100, 50], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [100, 50]],
      [[0, 50], [50, 0], [100, 50]],
      [[50, 0], [100, 50], [200, 50]],
      [[100, 50], [150, 100], [200, 50]],
      [[50, 0], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [50, 0]],
      [[50, 100], [50, 0], [100, 50]],
      [[50, 0], [100, 50], [200, 50]],
      [[100, 50], [150, 100], [200, 50]],
      [[50, 0], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [100, 50]],
      [[0, 50], [100, 50], [150, 0]],
      [[0, 50], [50, 0], [150, 0]],
      [[100, 50], [150, 100], [200, 50]],
      [[100, 50], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [100, 50]],
      [[0, 50], [100, 50], [150, 0]],
      [[0, 50], [50, 0], [150, 0]],
      [[100, 50], [150, 100], [150, 0]],
      [[150, 100], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [100, 50]],
      [[0, 50], [50, 0], [100, 50]],
      [[50, 0], [150, 100], [200, 50]],
      [[50, 0], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [50, 0]],
      [[50, 100], [50, 0], [100, 50]],
      [[50, 0], [150, 100], [200, 50]],
      [[50, 0], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [150, 0]],
      [[0, 50], [50, 0], [150, 0]],
      [[100, 50], [150, 100], [200, 50]],
      [[100, 50], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [150, 0]],
      [[0, 50], [50, 0], [150, 0]],
      [[100, 50], [150, 100], [150, 0]],
      [[150, 100], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [50, 0]],
      [[50, 100], [50, 0], [100, 50]],
      [[150, 100], [150, 0], [50, 0]],
      [[150, 100], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [100, 50]],
      [[0, 50], [50, 0], [100, 50]],
      [[150, 100], [150, 0], [50, 0]],
      [[150, 100], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [50, 0]],
      [[50, 100], [150, 0], [50, 0]],
      [[100, 50], [150, 100], [150, 0]],
      [[150, 100], [150, 0], [200, 50]]
    ],
    [
      [[0, 50], [50, 100], [50, 0]],
      [[50, 100], [150, 0], [50, 0]],
      [[100, 50], [150, 100], [200, 50]],
      [[100, 50], [150, 0], [200, 50]]
    ]
  ];

  //add the result of triangulation here
  let triangles = triangulate(geometry);
  console.log(triangles);

  expect(isCorrect(triangles, correctResults)).toEqual(true);
});
